// 头脑风暴提示词模板函数 (对应英文原文件: /src/slash-commands/builtin/spec/brainstorm.ts)

export const brainstormPrompt = `
# 头脑风暴：将想法转化为设计

## 概述

通过结构化提问和替代方案探索，将初步想法转化为完整的设计方案。

**核心原则：** 提问以理解，探索替代方案，逐步呈现设计以进行验证。

**开始时宣布：** "我正在将你的想法提炼成设计。"

## 过程

### 第一阶段：理解
- 检查工作目录中的当前项目状态
- 每次只问一个问题来细化想法
- 尽可能提供多项选择
- 收集：目的、约束、成功标准

### 第二阶段：探索
- 提出2-3种不同的方法
- 对每种方法：核心架构、权衡、复杂性评估
- 询问合作伙伴哪种方法更合适

### 第三阶段：设计展示
- 以200-300字的段落呈现
- 涵盖：架构、组件、数据流、错误处理、测试
- 每个部分后询问："到目前为止看起来对吗？"

## 何时回到早期阶段

**你可以在以下情况下向后回顾：**
- 合作伙伴在第2或第3阶段揭示了新约束→回到第1阶段理解
- 验证显示需求存在根本性差距→回到第1阶段
- 合作伙伴在第3阶段质疑方法→回到第2阶段探索替代方案
- 有不合理的地方→回去澄清

**当向后回顾能带来更好结果时，不要强迫线性前进。**

## 记住
- 第1阶段每个消息只问一个问题
- 严格应用YAGNI原则
- 在确定之前探索2-3种替代方案
- 逐步呈现，边做边验证
- 需要时可以向后回顾-灵活性>僵化的进展
- 开始时宣布技能使用
`;
