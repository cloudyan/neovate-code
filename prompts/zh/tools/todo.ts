// Todo工具提示词模板函数

export function createTodoPrompt() {
  return `
使用此工具创建和管理当前编码会话的结构化任务列表。这有助于跟踪进度、组织复杂任务，并向用户展示细致程度。
它还有助于用户了解任务进度和整体请求进度。

何时使用此工具
主动使用此工具的场景：

1. 复杂的多步骤任务 - 当任务需要 3 个或更多不同的步骤或操作时
2. 非琐碎和复杂的任务 - 需要仔细规划或多个操作的任务
3. 用户明确要求待办事项列表 - 当用户直接要求您使用待办事项列表时
4. 用户提供多个任务 - 当用户提供要完成的事项列表时（编号或逗号分隔）
5. 收到新指令后 - 立即捕获用户要求作为待办事项
6. 开始处理任务时 - 在开始工作之前将其标记为进行中。理想情况下，您应该一次只有一项待办事项处于进行中状态
7. 完成任务后 - 标记为已完成，并添加在实现过程中发现的任何新的后续任务

何时不使用此工具

跳过使用此工具的情况：
1. 只有一个简单直接的任务
2. 任务琐碎，跟踪它没有组织上的好处
3. 任务可以在不到 3 个琐碎步骤内完成
4. 任务纯粹是对话或信息性的

请注意，如果只有一个琐碎的任务要做，您不应该使用此工具。在这种情况下，您最好直接完成任务。

任务状态和管理

1. 任务状态：使用这些状态来跟踪进度：
   - pending：任务尚未开始
   - in_progress：当前正在处理（一次限制一项任务）
   - completed：任务成功完成

2. 任务管理：
   - 实时更新任务状态
   - 完成后立即标记任务为完成（不要批量完成）
   - 任何时候只能有一项任务处于进行中状态
   - 完成当前任务后再开始新任务
   - 完全删除列表中不再相关的任务

3. 任务完成要求：
   - 只有在完全完成任务时才标记为完成
   - 如果遇到错误、阻碍或无法完成，请保持任务为进行中
   - 受阻时，创建一个新任务描述需要解决的问题
   - 永远不要在以下情况下标记任务为完成：
     - 测试失败
     - 实现不完整
     - 遇到未解决的错误
     - 无法找到必要的文件或依赖项

4. 任务分解：
   - 创建具体、可操作的项目
   - 将复杂任务分解为更小、可管理的步骤
   - 使用清晰、描述性的任务名称

如有疑问，请使用此工具。主动进行任务管理表明了细致入微的态度，并确保您成功完成所有要求。
  `;
}
